{"version":3,"sources":["layaut/text.js","main/cards/styled.js","graphql/queries.js","context/globals/globalContext.js","context/globals/globalReducer.js","context/globals/types.js","layaut/error.js","layaut/screenLoader.js","context/globals/globalProvider.js","utils/darkTheme.js","utils/lightTheme.js","context/bCThemeProvider.js","layaut/textField/styled.js","layaut/textField/textField.js","main/search/components/searchInputPage.js","main/search/container/search.js","main/search/styled.js","layaut/button/styled.js","layaut/button/button.js","hooks/useRippleEffect.js","main/search/container/groupBy.js","main/search/index.js","main/cards/index.js","graphql/apolloClient.js","layaut/toggle/styled.js","layaut/toggle/toggle.js","App.js","hooks/useTheme.js","index.js"],"names":["Text","styled","div","color","theme","text","primary","size","ContainerCards","section","Card","bg","borderCard","card","Header","header","cardTitle","Body","GET_COUNTRIES","gql","GlobalContext","createContext","globalReducer","state","type","payload","countries","countriesFilter","isContinent","darkMode","Container","main","Error","fontSize","rotate","keyframes","ScreenLoader","className","INITIAL_STATE","GlobalProvider","children","useQuery","loading","error","data","useReducer","globalState","dispatch","setCountries","useCallback","setCountriesFilter","setDarkMode","useEffect","Provider","value","setContinent","undefined","darkTheme","secondary","button","lightTheme","BCThemeProvider","useState","mounted","setMounted","body","style","visibility","ContainerTextField","Input","input","ContainerInput","edge","isFocus","isError","Label","span","TextField","classes","icon","placeholder","label","name","handleChange","setIsFocus","onFocus","onBlur","onChange","SearchInputPage","SearchInput","useContext","e","target","filterCountries","filter","country","toLowerCase","indexOf","ContainerGroupBy","CotainerButton","article","ButtonStyled","fullWidth","Button","prop","handleClick","id","optionRef","useRef","index","current","tag","Array","isArray","posX","pageX","getBoundingClientRect","left","posY","pageY","top","buttonWidth","offsetWidth","divRippleEffect","document","createElement","width","height","appendChild","window","setTimeout","removeChild","addEffectRipple","ref","onMouseDown","onClick","GroupBy","isActiveContinent","setIsActiveContinent","as","Search","CardPage","lazy","Cards","observer","setLoading","limit","setLimit","setData","cutCountriesFilter","slice","lastDataTableElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","prevLimit","threshold","observe","map","key","fallback","client","ApolloClient","uri","cache","InMemoryCache","Toggle","htmlFor","Main","App","toggleTheme","useTheme","ApolloProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4453a5a0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Text = styled.div`\r\n    color: ${({ color, theme }) => color || theme.text.primary};\r\n    ${({ size }) => size ? `font-size: ${size}` : ''};\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ContainerCards = styled.section`\r\n    margin-top: 60px;\r\n    margin-bottom: 20px;\r\n    display: grid;\r\n    gap: 30px;\r\n    overflow-wrap: anywhere;\r\n\r\n    .text {\r\n        font-weight: bold;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    @media (min-width: 700px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    @media (min-width: 1440px) {\r\n        grid-template-columns: repeat(5, 1fr);\r\n    }\r\n\r\n    @media (min-width: 2000px) {\r\n        grid-template-columns: repeat(6, 1fr);\r\n    }\r\n\r\n    @media (min-width: 2300px) {\r\n        grid-template-columns: repeat(7, 1fr);\r\n    }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    border: 2px solid ${({ theme }) => theme.bg.borderCard};\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    background-color: ${({ theme }) => theme.bg.card};\r\n    color: ${({ theme }) => theme.text.primary};\r\n    cursor: pointer;\r\n    transform: scale(1);\r\n    transition: transform .2s ease-in;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        -webkit-box-shadow: -1px -2px 20px -6px rgba(0,0,0,0.75);\r\n        -moz-box-shadow: -1px -2px 20px -6px rgba(0,0,0,0.75);\r\n        box-shadow: -1px -2px 20px -6px rgba(0,0,0,0.75);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n\r\n    .card__header-text {\r\n        margin-left: 10px;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n        color: ${({ theme }) => theme.text.cardTitle};\r\n    }\r\n`;\r\n\r\nexport const Body = styled.section`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n\r\n    article {\r\n        display: flex;\r\n    }\r\n\r\n    .ml {\r\n        margin-left: 5px;\r\n    }\r\n\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_COUNTRIES = gql`\r\n    {\r\n        countries {\r\n            name\r\n            native\r\n            capital\r\n            currency\r\n            continent {\r\n                name\r\n            }\r\n            languages {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;","import { createContext } from 'react';\r\n\r\nexport const GlobalContext = createContext(null);","import { DATA_COUNTRIES, DATA_COUNTRIES_FILTER, CONTINENT, DARK_MODE } from './types';\r\n\r\nexport const globalReducer = (state, { type, payload }) => {\r\n\r\n    switch (type) {\r\n\r\n        case DATA_COUNTRIES:\r\n            return { ...state, countries: payload };\r\n\r\n        case DATA_COUNTRIES_FILTER:\r\n                return { ...state, countriesFilter: payload };\r\n\r\n        case CONTINENT:\r\n            return { ...state, isContinent: payload };\r\n\r\n        case DARK_MODE:\r\n            return { ...state, darkMode: payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const DATA_COUNTRIES = 'DATA_COUNTRIES';\r\nexport const DATA_COUNTRIES_FILTER = 'DATA_COUNTRIES_FILTER';\r\nexport const CONTINENT = 'CONTINENT';\r\nexport const DARK_MODE = 'DARK_MODE';","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GiDoubleFaceMask } from \"react-icons/gi\";\r\n\r\nimport { Text } from './text';\r\n\r\nconst Container = styled.main`\r\n    background-color: #1E1E1E;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    section {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Error = () => (\r\n    <Container>\r\n        <section>\r\n            <GiDoubleFaceMask\r\n                fontSize={300}\r\n                color=\"#EC852A\"\r\n            />\r\n\r\n            <Text\r\n                color=\"#DE650E\"\r\n                size=\"23px\"\r\n            >Oops ha ocurrido un error</Text>\r\n        </section>\r\n    </Container>\r\n);\r\n\r\nexport default Error;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\n\r\nconst rotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst Container = styled.section`\r\n    background-color: #1E1E1E;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .icon {\r\n        animation: ${rotate} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst ScreenLoader = () => (\r\n    <Container>\r\n        <BiLoaderCircle\r\n            fontSize={100}\r\n            color=\"white\"\r\n            className='icon'\r\n        />\r\n    </Container>\r\n);\r\n\r\nexport default ScreenLoader;","import React, { useEffect, useReducer, useCallback } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { GET_COUNTRIES } from '../../graphql/queries';\r\nimport { GlobalContext } from \"./globalContext\"\r\nimport { globalReducer } from \"./globalReducer\";\r\nimport { DATA_COUNTRIES, DATA_COUNTRIES_FILTER, CONTINENT, DARK_MODE } from './types';\r\nimport Error from '../../layaut/error';\r\nimport ScreenLoader from '../../layaut/screenLoader';\r\n\r\nconst INITIAL_STATE = {\r\n    countries: [],\r\n    countriesFilter: [],\r\n    isContinent: true,\r\n    darkMode: false,\r\n}\r\n\r\nconst GlobalProvider = ({ children, darkMode }) => {\r\n\r\n    const { loading, error, data } = useQuery(GET_COUNTRIES);\r\n    \r\n    const [globalState, dispatch] = useReducer(globalReducer, INITIAL_STATE);\r\n    \r\n    const setCountries = useCallback((countries) => {\r\n\r\n        dispatch({\r\n            type: DATA_COUNTRIES,\r\n            payload: countries,\r\n        });\r\n\r\n    }, [dispatch]);\r\n\r\n    const setCountriesFilter = useCallback((countries) => {\r\n\r\n        dispatch({\r\n            type: DATA_COUNTRIES_FILTER,\r\n            payload: countries,\r\n        });\r\n\r\n    }, [dispatch]);\r\n\r\n    const setDarkMode = useCallback((darkMode) => {\r\n\r\n        dispatch({\r\n            type: DARK_MODE,\r\n            payload: darkMode,\r\n        })\r\n\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => setDarkMode(darkMode), [darkMode, setDarkMode]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (loading) return;\r\n        \r\n        const { countries } = data;\r\n\r\n        setCountries(countries);\r\n        setCountriesFilter(countries);\r\n\r\n    }, [data, loading, error, setCountries, setCountriesFilter]);\r\n\r\n    const setContinent = isContinent => dispatch({\r\n        type: CONTINENT,\r\n        payload: isContinent,\r\n    });\r\n    \r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            globalState,\r\n            setCountriesFilter,\r\n            setContinent,\r\n        }}>\r\n            { loading ? <ScreenLoader /> : <>{\r\n                error !== undefined ? <Error /> : children\r\n            }</> }\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalProvider;","const dark = {\r\n    text: {\r\n        primary: \"white\",\r\n        secondary: 'white',\r\n        cardTitle: '#E9D3D3',\r\n    },\r\n    bg: {\r\n        primary: \"#808FC7\",\r\n        button: \"#5D6BAA\",\r\n        borderCard: 'white',\r\n        card: '#5D6BAA',\r\n    }\r\n}\r\n  \r\nexport const darkTheme = dark;","const light = {\r\n    text: {\r\n        primary: \"#3A3A3A\",\r\n        secondary: '#373737',\r\n        cardTitle: '#373737',\r\n    },\r\n    bg: {\r\n        primary: \"#F5F5F5\",\r\n        button: '#1976d2',\r\n        borderCard: '#7A7A7A',\r\n        card: 'white',\r\n    }\r\n};\r\n\r\nexport const lightTheme = light;","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme } from \"../utils/darkTheme\";\r\nimport { lightTheme } from \"../utils/lightTheme\";\r\n\r\nconst BCThemeProvider = ({ children, darkMode }) => {\r\n\r\n    const theme = darkMode ? darkTheme : lightTheme;\r\n\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    useEffect(() => setMounted(true), []);\r\n\r\n    const body = <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n\r\n    return !mounted\r\n    ? <div style={{ visibility: \"hidden\" }}>{body}</div>\r\n    : body;\r\n};\r\n\r\nexport default BCThemeProvider;","import styled from \"styled-components\";\r\n\r\nconst styles = () => (`\r\n    padding: 12px;\r\n    display: inline-block;\r\n    border: 1px solid #9A9A9A;\r\n    border-radius: 3px;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    transition: border .1s ease-in-out;\r\n    font-size: 14px;\r\n    color: #424242;\r\n    background-color: white;\r\n`);\r\n\r\nexport const ContainerTextField = styled.div`\r\n    span {\r\n        margin-bottom: 10px;\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    ${styles()}\r\n    border: none;\r\n\r\n    &:focus {\r\n        border: none;\r\n    }\r\n`;\r\n\r\nexport const ContainerInput = styled.div`\r\n    ${styles()}\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 25ch;\r\n    ${({ edge }) => edge && (edge === 'start' ? 'padding-left: 12px' : 'padding-right: 12px')};\r\n\r\n    border: 2px solid ${({ isFocus, isError }) => isFocus\r\n    ? (isError ? '#D32F2F' : '#3A3A3A')\r\n    : (isError ? '#D32F2F' : '#9A9A9A') };\r\n\r\n    svg {\r\n        cursor: pointer;\r\n    }\r\n\r\n    input {\r\n        width: 100%;\r\n        color: ${({ isError }) => isError ? '#D32F2F' : '#424242'};\r\n    }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n    color: ${({ theme }) => theme.text.primary};\r\n`;","import React, { useState } from 'react';\r\nimport { ContainerTextField, Input, ContainerInput, Label } from './styled';\r\n\r\nconst TextField = ({ classes=\"\", icon=null, edge=null, placeholder=\"\", label, type=\"text\", name, handleChange, isError=false }) => {\r\n\r\n    const [isFocus, setIsFocus] = useState(false);\r\n\r\n    return <ContainerTextField\r\n        onFocus={() => setIsFocus(true)}\r\n        onBlur={() => setIsFocus(false)}\r\n    >\r\n\r\n        { label ? <Label>{label}</Label> : null }\r\n\r\n        <ContainerInput\r\n            isFocus={isFocus}\r\n            edge={edge}\r\n            isError={isError}\r\n            className={classes}\r\n        >\r\n            { edge === 'start' ? icon : null }\r\n\r\n            <Input\r\n                placeholder={placeholder}\r\n                type={type}\r\n                name={name}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            { edge === 'end' ? icon : null }\r\n        </ContainerInput>\r\n    </ContainerTextField>\r\n}\r\n\r\nexport default TextField;","import React from 'react';\r\nimport { FcSearch } from \"react-icons/fc\";\r\n\r\nimport TextField from '../../../layaut/textField/textField';\r\n\r\nconst SearchInputPage = ({ handleChange }) => (\r\n    <TextField\r\n        icon={<FcSearch fontSize={30} />}\r\n        edge=\"start\"\r\n        label=\"Some random text\"\r\n        classes='input'\r\n        handleChange={handleChange}\r\n    />\r\n)\r\n\r\nexport default SearchInputPage;","import React, { useContext } from 'react';\r\n\r\nimport SearchInputPage from '../components/searchInputPage';\r\nimport { GlobalContext } from '../../../context/globals/globalContext';\r\n\r\nconst SearchInput = () => {\r\n\r\n    const { globalState:{ countries }, setCountriesFilter } = useContext(GlobalContext);\r\n\r\n    const handleChange = e => {\r\n\r\n        const text = e.target.value;\r\n        const filterCountries = countries.filter(country => country.name.toLowerCase().indexOf(text.toLowerCase()) !== -1 );\r\n\r\n        setCountriesFilter(filterCountries);\r\n    }\r\n\r\n    return (\r\n        <SearchInputPage\r\n        handleChange={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchInput;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n    margin-top: 60px;\r\n\r\n    .input {\r\n        width: 100%;\r\n    }\r\n\r\n    .text {\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nexport const ContainerGroupBy = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 700px) {\r\n        display: block;\r\n\r\n        .text__group-by {\r\n            margin-bottom: 20px;\r\n            text-align: center;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CotainerButton = styled.article`\r\n    display: flex;\r\n\r\n    .continent {\r\n        color: #494949;\r\n    }\r\n\r\n    .mr {\r\n        margin-right: 15px;\r\n    }\r\n\r\n    .ml {\r\n        margin-left: 15px;\r\n    }\r\n\r\n    @media (max-width: 700px) {\r\n        justify-content: center;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ButtonStyled = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    outline: 0;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    font-size: ${({ edge }) => edge !== null ? '0.675rem' : '0.875rem'};\r\n    line-height: 1.75;\r\n    letter-spacing: 0.02857em;\r\n    min-width: 64px;\r\n    padding: 6px 36px;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    background-color: ${({ color, theme }) => color || theme.bg.button};\r\n    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\r\n    height: 40px;\r\n    font-weight: bold;\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n        background-color: ${({ color, theme }) => color || theme.bg.button};\r\n        filter: brightness(0.9);\r\n        //box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n    }\r\n\r\n    ${({ fullWidth }) => fullWidth ? 'width: 100%' : ''};\r\n\r\n    img {\r\n        width: 20px;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    span{\r\n        margin: 0 10px;\r\n    }\r\n`;","import React, { useRef } from 'react';\r\n\r\nimport { useRippleEffect } from '../../hooks/useRippleEffect';\r\nimport { ButtonStyled } from './styled';\r\n\r\nconst Button = ({ children, classes=\"\", color=\"\", fullWidth=false, icon, edge=null, type=\"button\", handleClick=()=>{}, id=null }) => {\r\n\r\n    const optionRef = useRef(null);\r\n\r\n    const [addEffectRipple] = useRippleEffect(optionRef);\r\n\r\n    return (\r\n        <ButtonStyled\r\n            className={`${classes} container-ripple`}\r\n            color={color}\r\n            ref={optionRef}\r\n            onMouseDown={addEffectRipple}\r\n            fullWidth={fullWidth}\r\n            edge={edge}\r\n            type={type}\r\n            onClick={() => handleClick(id)}\r\n        >\r\n            {edge === 'start' && icon}\r\n\r\n            <span>{ children }</span>\r\n\r\n            {edge === 'end' && icon}\r\n        </ButtonStyled>\r\n    );\r\n}\r\n\r\nexport default Button;","/*\r\n    ===================COMO USAR EL HOOK===================\r\n\r\n    -------------------Un solo elemento--------------------\r\n\r\n        const optionRef = useRef<HTMLDivElement|null>(null);\r\n\r\n        const [addEffectRipple] = useRippleEffect(optionRef);\r\n\r\n        ELEMENTO QUE VA A TENER EL EFECTO RIPPLE\r\n        <div\r\n            className=\"container-ripple\"\r\n            ref={optionRef}\r\n            onMouseDown={addEffectRipple}\r\n        >\r\n            Hola mundo\r\n        </div>\r\n\r\n    -------------------Mas de un elemento------------------\r\n\r\n        const optionsRef = useRef<HTMLDivElement[]|null[]>([]);\r\n\r\n        const [addEffectRipple] = useRippleEffect(optionsRef);\r\n\r\n        ELEMENTOS QUE VAN A TENER EL EFECTO RIPPLE\r\n        [{...}, {...}].map(element => (\r\n            <div\r\n                className=\"container-ripple\"\r\n                ref={tag => (optionsRef.current[index] = tag)}\r\n                onMouseDown={e => addEffectRipple(e, index)}\r\n            >\r\n                Hola mundo\r\n            </div>\r\n        ));\r\n*/\r\n\r\nexport const useRippleEffect = (prop) => {\r\n\r\n    const addEffectRipple = (e, index) => {\r\n\r\n        const { current } = prop;\r\n        const isArray = Array.isArray(current);\r\n        const tag = isArray ? current[index] : current;\r\n\r\n        const posX = e.pageX - tag.getBoundingClientRect().left;\r\n        const posY = e.pageY - tag.getBoundingClientRect().top;\r\n        const buttonWidth = 2 * tag.offsetWidth;\r\n\r\n        const divRippleEffect = document.createElement('div');\r\n        divRippleEffect.className = 'ripple-effect';\r\n        divRippleEffect.style.width = `${buttonWidth}px`;\r\n        divRippleEffect.style.height = `${buttonWidth}px`;\r\n        divRippleEffect.style.left = `${ posX - (buttonWidth / 2) }px`;\r\n        divRippleEffect.style.top = `${ posY - (buttonWidth / 2) }px`;\r\n\r\n        tag.appendChild(divRippleEffect);\r\n\r\n        window.setTimeout(() => tag.removeChild(divRippleEffect), 900);\r\n    }\r\n\r\n    return [addEffectRipple];\r\n}","import React, { useState, useContext } from 'react';\r\n\r\nimport { ContainerGroupBy, CotainerButton } from '../styled';\r\nimport { Text } from '../../../layaut/text';\r\nimport Button from '../../../layaut/button/button';\r\nimport { GlobalContext } from '../../../context/globals/globalContext';\r\n\r\nconst idContinent = 1;\r\n\r\nconst GroupBy = () => {\r\n\r\n    const { setContinent } = useContext(GlobalContext);\r\n\r\n    const [isActiveContinent, setIsActiveContinent] = useState(true);\r\n\r\n    const handleClick = id => {\r\n\r\n        setIsActiveContinent(id === idContinent);\r\n        setContinent(id === idContinent);\r\n    }\r\n\r\n    return <ContainerGroupBy>\r\n        \r\n        <Text as='h2' className='text__group-by'>Group by:</Text>\r\n\r\n        <CotainerButton>\r\n            <Button\r\n                classes={`mr ${isActiveContinent ? '' : \"continent\"}`}\r\n                color={isActiveContinent ? '' : \"#E6E6E6\"}\r\n                id={1}\r\n                handleClick={handleClick}\r\n            >Continent</Button>\r\n\r\n            <Button\r\n                classes={`ml ${isActiveContinent ? 'continent' : \"\"}`}\r\n                color={isActiveContinent ? '#E6E6E6' : \"\"}\r\n                id={2}\r\n                handleClick={handleClick}\r\n            >Language</Button>\r\n        </CotainerButton>\r\n    </ContainerGroupBy>\r\n}\r\n\r\nexport default GroupBy;","import React from 'react';\r\n\r\nimport SearchInput from './container/search';\r\nimport GroupBy from './container/groupBy';\r\nimport { Text } from '../../layaut/text';\r\nimport { Container } from './styled';\r\n\r\nconst Search = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <Text as='h1' className='text'>Country Search</Text>\r\n\r\n            <SearchInput />\r\n\r\n            <GroupBy />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useState, useEffect, useContext, useRef, useCallback, Suspense, lazy } from 'react';\r\n\r\nimport { ContainerCards } from './styled';\r\nimport { GlobalContext } from '../../context/globals/globalContext';\r\n\r\nconst CardPage = lazy(() => import('./components/cardPage'));\r\n\r\nconst Cards = () => {\r\n\r\n    const { globalState:{ isContinent, countriesFilter, darkMode } } = useContext(GlobalContext);\r\n\r\n    const observer = useRef(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [limit, setLimit] = useState(10);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const cutCountriesFilter = countriesFilter.slice(0, 10);\r\n\r\n        setData(cutCountriesFilter);\r\n        setLoading(false);\r\n\r\n    }, [countriesFilter]);\r\n    \r\n    useEffect(() => {\r\n\r\n        const cutCountriesFilter = countriesFilter.slice(0, limit);\r\n        setData(cutCountriesFilter);\r\n\r\n    }, [limit, countriesFilter]);\r\n\r\n    const lastDataTableElementRef = useCallback(node => {\r\n\r\n        if (observer.current) observer.current.disconnect();\r\n\r\n        observer.current = new IntersectionObserver(entries => {\r\n            \r\n            entries[0].isIntersecting && setLimit(prevLimit => prevLimit + 10);\r\n\r\n        }, { threshold: 0.5 });\r\n\r\n        node && observer.current.observe(node);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <div>Cargando...</div>\r\n                : <ContainerCards>\r\n                        {\r\n                            data.map((country, index) => (\r\n                                <Suspense key={index} fallback={<div>Cargando...</div>}>\r\n                                    <CardPage\r\n                                        country={country}\r\n                                        isContinent={isContinent}\r\n                                        darkMode={darkMode}\r\n                                        lastDataTableElementRef={lastDataTableElementRef}\r\n                                    />\r\n                                </Suspense>\r\n                            ))\r\n                        }\r\n                </ContainerCards>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nexport const client = new ApolloClient({\r\n    uri: \"https://countries.trevorblades.com/graphql\",\r\n    cache: new InMemoryCache(),\r\n});","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\r\n    padding-top: 30px;\r\n\r\n    /* Light theme */\r\n\r\n    .toggle--checkbox {\r\n        display: none;\r\n    }\r\n\r\n    .toggle--label {\r\n        width: 90px;\r\n        height: 40px;\r\n        background: var(--blue-color);\r\n        border-radius: 100px;\r\n        border: 5px solid var(--blue-border);\r\n        display: flex;\r\n        position: relative;\r\n        transition: all 350ms ease-in;\r\n    }\r\n\r\n    .toggle--label:before {\r\n        animation-name: reverse;\r\n        animation-duration: 350ms;\r\n        animation-fill-mode: forwards;\r\n        transition: all 350ms ease-in;\r\n        content: '';\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 5px solid var(--yellow-border);\r\n        position: absolute;\r\n        top: 0px;\r\n        border-radius: 82px;\r\n        background: var(--yellow-background);\r\n    }\r\n\r\n    @keyframes reverse {\r\n        0% {\r\n            left: 40px;\r\n        }\r\n\r\n        60% {\r\n            left: 20px;\r\n            width: 50px;\r\n        }\r\n        \r\n        100% {\r\n            left: 2px;\r\n            width: 20px;\r\n        }\r\n    }\r\n\r\n    .toggle--label-background {\r\n        width: 10px;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        position: relative;\r\n        background: var(--white);\r\n        left: 48px;\r\n        top: 15px;\r\n        transition: all 150ms ease-in;\r\n    }\r\n\r\n    .toggle--label-background:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: -5px;\r\n        width: 25px;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        background: var(--white);\r\n        left: -10px;\r\n        transition: all 150ms ease-in;\r\n    }\r\n\r\n    .toggle--label-background:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 5px;\r\n        width: 25px;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        background: var(--white);\r\n        left: -3px;\r\n        transition: all 150ms ease-in;\r\n    }\r\n\r\n    /* Dark theme */\r\n\r\n    .toggle--checkbox:checked + .toggle--label {\r\n        background: var(--indigo-color);\r\n        border-color: var(--indigo-border);\r\n    }\r\n\r\n    .toggle--checkbox:checked + .toggle--label:before {\r\n        background: var(--white);\r\n        border-color: var(--gray-border);\r\n        animation-name: switch;\r\n        animation-duration: 350ms;\r\n        animation-fill-mode: forwards;\r\n    }\r\n\r\n    @keyframes switch {\r\n        0% {\r\n            left: 4px;\r\n        }\r\n\r\n        60% {\r\n            left: 4px;\r\n            width: 50px;\r\n        }\r\n\r\n        100% {\r\n            left: 48px;\r\n            width: 20px;\r\n        }\r\n    }\r\n\r\n    .toggle--label:after {\r\n        transition-delay: 0ms;\r\n        transition: all 250ms ease-in;\r\n        position: absolute;\r\n        content: '';\r\n        box-shadow: var(--gray-dots) -13px 0 0 2px, var(--gray-dots) -24px 14px 0 -2px;\r\n        left: 75px;\r\n        top: 8px;\r\n        width: 5px;\r\n        height: 5px;\r\n        background: transparent;\r\n        border-radius: 50%;\r\n        opacity: 0;\r\n    }\r\n\r\n    .toggle--checkbox:checked + .toggle--label:after {\r\n        transition-delay: 350ms;\r\n        opacity: 1;\r\n    }\r\n\r\n    .toggle--checkbox:checked + .toggle--label .toggle--label-background {\r\n        width: 5px;\r\n        left: 35px;\r\n        top: 13px;\r\n    }\r\n\r\n    .toggle--checkbox:checked + .toggle--label .toggle--label-background:before {\r\n        width: 5px;\r\n        top: -5px;\r\n        left: -15px;\r\n    }\r\n\r\n    .toggle--checkbox:checked + .toggle--label .toggle--label-background:after {\r\n        width: 5px;\r\n        left: -25px;\r\n        top: 7px;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { Container } from './styled';\r\n\r\nconst Toggle = ({ handleClick }) => (\r\n    <Container>\r\n        <input type=\"checkbox\" id=\"toggle\" className=\"toggle--checkbox\" />\r\n\r\n        <label htmlFor=\"toggle\" className=\"toggle--label\" onClick={handleClick}>\r\n            <span className=\"toggle--label-background\"></span>\r\n        </label>\r\n    </Container>\r\n);\r\n\r\nexport default Toggle;","import React from \"react\";\nimport styled from 'styled-components';\nimport { ApolloProvider } from \"@apollo/client\";\n\nimport GlobalProvider from './context/globals/globalProvider';\nimport BCThemeProvider from './context/bCThemeProvider';\nimport Search from './main/search/';\nimport Cards from './main/cards';\nimport { client } from './graphql/apolloClient';\nimport Toggle from './layaut/toggle/toggle';\nimport { useTheme } from './hooks/useTheme';\n\nconst Main = styled.main`\n    padding: 0 100px;\n    background-color: ${({ theme }) => theme.bg.primary};\n    min-height: 100vh;\n\n    @media (max-width: 426px) {\n        padding-left: 30px;\n        padding-right: 30px;\n    }\n`;\n\nconst App = () => {\n\n    const { darkMode, toggleTheme } = useTheme();\n    \n    return (\n        <ApolloProvider client={client}>\n            <BCThemeProvider darkMode={darkMode}>\n                <GlobalProvider darkMode={darkMode}>\n                    <Main>\n        \n                        <Toggle\n                            handleClick={toggleTheme}\n                        />\n        \n                        <Search />\n                        <Cards />\n                    </Main>\n                </GlobalProvider>\n            </BCThemeProvider>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import { useState } from 'react';\r\n\r\nexport const useTheme = (state=false) => {\r\n\r\n    const [darkMode, setDarkMode] = useState(state);\r\n\r\n    const toggleTheme = () => setDarkMode(!darkMode);\r\n    \r\n    return { darkMode, toggleTheme };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}